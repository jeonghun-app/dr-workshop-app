{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "CloudFormation template to create a VPC with Aurora RDS Writer, Reader, and DMS Replication Instance using MySQL 8.0",
  "Parameters": {
    "VpcCidr": {
      "Type": "String",
      "Default": "172.31.0.0/16",
      "Description": "CIDR block for the VPC"
    },
    "PublicSubnet1Cidr": {
      "Type": "String",
      "Default": "172.31.1.0/24",
      "Description": "CIDR block for Public Subnet 1"
    },
    "PublicSubnet2Cidr": {
      "Type": "String",
      "Default": "172.31.2.0/24",
      "Description": "CIDR block for Public Subnet 2"
    },
    "PrivateSubnet1Cidr": {
      "Type": "String",
      "Default": "172.31.3.0/24",
      "Description": "CIDR block for Private Subnet 1"
    },
    "PrivateSubnet2Cidr": {
      "Type": "String",
      "Default": "172.31.4.0/24",
      "Description": "CIDR block for Private Subnet 2"
    }
  },
  "Resources": {
    "Vpc": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": { "Ref": "VpcCidr" },
        "EnableDnsSupport": true,
        "EnableDnsHostnames": true,
        "Tags": [{ "Key": "Name", "Value": "DRS-SITE" }]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [{ "Key": "Name", "Value": "DRS-IGW" }]
      }
    },
    "VpcGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "InternetGatewayId": { "Ref": "InternetGateway" }
      }
    },
    "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "CidrBlock": { "Ref": "PublicSubnet1Cidr" },
        "MapPublicIpOnLaunch": true,
        "AvailabilityZone": {
          "Fn::Select": [0, { "Fn::GetAZs": "" }]
        },
        "Tags": [{ "Key": "Name", "Value": "DRS-Public-Subnet-1" }]
      }
    },
    "PublicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "CidrBlock": { "Ref": "PublicSubnet2Cidr" },
        "MapPublicIpOnLaunch": true,
        "AvailabilityZone": {
          "Fn::Select": [1, { "Fn::GetAZs": "" }]
        },
        "Tags": [{ "Key": "Name", "Value": "DRS-Public-Subnet-2" }]
      }
    },
    "PrivateSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "CidrBlock": { "Ref": "PrivateSubnet1Cidr" },
        "AvailabilityZone": {
          "Fn::Select": [0, { "Fn::GetAZs": "" }]
        },
        "Tags": [{ "Key": "Name", "Value": "DRS-Private-Subnet-1" }]
      }
    },
    "PrivateSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "CidrBlock": { "Ref": "PrivateSubnet2Cidr" },
        "AvailabilityZone": {
          "Fn::Select": [1, { "Fn::GetAZs": "" }]
        },
        "Tags": [{ "Key": "Name", "Value": "DRS-Private-Subnet-2" }]
      }
    },
    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "Tags": [{ "Key": "Name", "Value": "DRS-Public-Route-Table" }]
      }
    },
    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": { "Ref": "PublicRouteTable" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": { "Ref": "InternetGateway" }
      }
    },
    "PublicSubnet1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PublicSubnet1" },
        "RouteTableId": { "Ref": "PublicRouteTable" }
      }
    },
    "PublicSubnet2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PublicSubnet2" },
        "RouteTableId": { "Ref": "PublicRouteTable" }
      }
    },
    "DMSReplicationInstance": {
      "Type": "AWS::DMS::ReplicationInstance",
      "Properties": {
        "ReplicationInstanceClass": "dms.r5.large",
        "ReplicationInstanceIdentifier": "dms-replication-instance",
        "AllocatedStorage": 100,
        "PubliclyAccessible": true,
        "VpcSecurityGroupIds": [{ "Ref": "AuroraSecurityGroup" }],
        "ReplicationSubnetGroupIdentifier": { "Ref": "DMSSubnetGroup" }
      }
    },
    "DMSSubnetGroup": {
      "Type": "AWS::DMS::ReplicationSubnetGroup",
      "Properties": {
        "ReplicationSubnetGroupIdentifier": "dms-subnet-group",
        "ReplicationSubnetGroupDescription": "DMS Subnet Group",
        "SubnetIds": [{ "Ref": "PublicSubnet1" }, { "Ref": "PublicSubnet2" }]
      }
    },
    "AuroraCluster": {
      "Type": "AWS::RDS::DBCluster",
      "Properties": {
        "Engine": "aurora-mysql",
        "EngineVersion": "8.0.mysql_aurora.3.05.2",
        "MasterUsername": "root",
        "MasterUserPassword": "qwer1234",
        "DBSubnetGroupName": {
          "Ref": "AuroraSubnetGroup"
        },
        "VpcSecurityGroupIds": [
          {
            "Ref": "AuroraSecurityGroup"
          }
        ]
      }
    },
    "AuroraWriterInstance": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "DBClusterIdentifier": {
          "Ref": "AuroraCluster"
        },
        "DBInstanceClass": "db.r5.large",
        "Engine": "aurora-mysql"
      }
    },
    "AuroraReaderInstance": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "DBClusterIdentifier": {
          "Ref": "AuroraCluster"
        },
        "DBInstanceClass": "db.r5.large",
        "Engine": "aurora-mysql"
      }
    },
    "AuroraSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "Subnet group for Aurora",
        "SubnetIds": [
          {
            "Ref": "PrivateSubnet1"
          },
          {
            "Ref": "PrivateSubnet2"
          }
        ]
      }
    },
    "AuroraSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Allow database and DMS access",
        "VpcId": { "Ref": "Vpc" },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 3306,
            "ToPort": 3306,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": 443,
            "ToPort": 443,
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    }
  },
  "Outputs": {
    "DMSEndpoint": {
      "Description": "DMS Replication Instance Endpoint",
      "Value": {
        "Fn::GetAtt": [
          "DMSReplicationInstance",
          "ReplicationInstancePublicIpAddress"
        ]
      }
    },
    "AuroraClusterEndpoint": {
      "Description": "Aurora Cluster Endpoint",
      "Value": { "Fn::GetAtt": ["AuroraCluster", "Endpoint.Address"] }
    },
    "AuroraReadEndpoint": {
      "Description": "Aurora Read Endpoint",
      "Value": { "Fn::GetAtt": ["AuroraCluster", "ReadEndpoint.Address"] }
    }
  }
}
